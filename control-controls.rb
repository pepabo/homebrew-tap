# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class ControlControls < Formula
  desc "control-controls control controls of AWS Security Hub across all regions."
  homepage "https://github.com/pepabo/control-controls"
  version "0.6.1"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/pepabo/control-controls/releases/download/v0.6.1/control-controls_v0.6.1_darwin_arm64.zip"
      sha256 "ed2f59e0ee146b3753e418e72158e1874e4012d9f0483f10fb32b291ed31bd3e"

      def install
        bin.install 'control-controls'
        output = Utils.safe_popen_read("#{bin}/control-controls", 'completion', 'bash')
        (bash_completion/'control-controls').write output
        output = Utils.safe_popen_read("#{bin}/control-controls", 'completion', 'zsh')
        (zsh_completion/'_control-controls').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/pepabo/control-controls/releases/download/v0.6.1/control-controls_v0.6.1_darwin_amd64.zip"
      sha256 "957c4bfc3039032a8d35c788f30df9f28fddb967344ac16e3ad5b005d740ba9e"

      def install
        bin.install 'control-controls'
        output = Utils.safe_popen_read("#{bin}/control-controls", 'completion', 'bash')
        (bash_completion/'control-controls').write output
        output = Utils.safe_popen_read("#{bin}/control-controls", 'completion', 'zsh')
        (zsh_completion/'_control-controls').write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/pepabo/control-controls/releases/download/v0.6.1/control-controls_v0.6.1_linux_amd64.tar.gz"
      sha256 "21bcb5c220cfe701a64298624d02fa5cb448e2d9aaaabe4382a0664a7aac4e84"

      def install
        bin.install 'control-controls'
        output = Utils.safe_popen_read("#{bin}/control-controls", 'completion', 'bash')
        (bash_completion/'control-controls').write output
        output = Utils.safe_popen_read("#{bin}/control-controls", 'completion', 'zsh')
        (zsh_completion/'_control-controls').write output
      end
    end
  end
end
